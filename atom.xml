<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>UniSharp blog</title>
  <subtitle>網站建置與管理經營的大平台</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.unisharp.com/"/>
  <updated>2017-05-31T05:01:06.000Z</updated>
  <id>http://blog.unisharp.com/</id>
  
  <author>
    <name>Mr.UniSharp</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>rsync 是如何比較檔案差異的</title>
    <link href="http://blog.unisharp.com/2018/05/31/rsync%20%E6%98%AF%E5%A6%82%E4%BD%95%E6%AF%94%E8%BC%83%E6%AA%94%E6%A1%88%E5%B7%AE%E7%95%B0%E7%9A%84%EF%BC%9F/"/>
    <id>http://blog.unisharp.com/2018/05/31/rsync 是如何比較檔案差異的？/</id>
    <published>2018-05-30T16:00:00.000Z</published>
    <updated>2017-05-31T05:01:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>rsync 是 unix 上常常被用來同步兩臺主機資料的指令。而 rsync 令人稱道同步能力，不僅僅是把檔案抓下來到本機，而是厲害到可以只下載一個檔案中的差異部分，而非整份檔案抓下來。<br><a id="more"></a><br>如果自己想自製一個能夠比較兩份文件差異的程式，稍微想一下設計，大約還能以行爲單位來設計，找出差異。</p>
<p>但是如果檔案並非純文字，而是像照片這般的二進位檔案，可能一整份檔案都沒有任何換行符號，一比較差異就是讓伺服器把整份檔案重新抓下來了。</p>
<p>面對通用檔案的差異比較，其設計思路就會朝向將檔案切成一塊一塊的區塊來進行差異比較。但終究需要面對以下問題：</p>
<ul>
<li>不可能將每個區塊的內容下載下來讓客戶端進行比較，這樣等同下載整份檔案</li>
<li>如果只是檔頭加了一點內容，切割區塊有機會造成每個區塊內容就不同，也等同要下載整份檔案</li>
</ul>
<p>面對以上問題，rsync 採用了一些不錯的解決對策</p>
<h4 id="校驗和-Checksum"><a href="#校驗和-Checksum" class="headerlink" title="校驗和 (Checksum)"></a>校驗和 (Checksum)</h4><p>校驗和不是 rsync 獨有的東西，很早就有利用校驗和來檢查檔案是否完整的流程存在。而校驗和其原理就只是利用檔案內的資料產生一個獨特的值，讓下載方與供應方用同樣的方法生出該值，稍加比較就知道兩個檔案是否相同。</p>
<p>舉個最簡單的校驗和的例子，假設檔案內容如下：</p>
<pre><code>{5, 6, 7, 8}
</code></pre><p>最簡單的校驗和可以直接全部內容相加，其校驗和爲 26 ，只要下載方的校驗和也是 26 ，檔案下載完整的 <strong>可能性</strong> 就越高。</p>
<p>這裡的說明是用 <strong>可能性</strong> 是因為大家都知道直接相加的缺點。有太多可以產生相同校驗和的方法了。<br>例如以下內容皆有機會被視為相同檔案：</p>
<pre><code>{3, 7, 8, 8}
{9, 2, 5, 11}
</code></pre><p>因此資訊界競相設計出各種校驗和的演算，例如 md4, md5 ，都宣稱高度可信，很難有不同的來源會產生相同的校驗和。但是越高度可信，所需要的計算時間越久，甚至需要產生一些質數出來輔助。</p>
<p>總結校驗和帶來的幫助，就是無需將伺服器上的每個區塊的內容都下載下來比較，只需要比較其校驗和便能得知是否有相同內容。</p>
<h4 id="rsync-策略概述"><a href="#rsync-策略概述" class="headerlink" title="rsync 策略概述"></a>rsync 策略概述</h4><p>rsync 接下來要面對的問題，就是如何避免檔案偏移，就造成下載整份檔案的狀況。其流程大概像下面的步驟：</p>
<ol>
<li>將伺服器上的檔案 B 切成不重疊的區塊。</li>
<li>將檔案 B 的所有區塊分別算出一個<strong>弱校驗和</strong>(Rolling Checksum) 和 <strong>強校驗和</strong> (md4)</li>
<li>客戶端將所有區塊的校驗和下載製表 (hash table)</li>
<li>客戶端從檔案 A 的檔頭開始切區塊，先只快速算出 <strong>弱校驗和</strong>，用其查表，查看是否存在</li>
<li>查表<ul>
<li>若無法用弱校驗和查出檔案 B 有該區塊，則區塊往下偏移繼續切並重複步驟 4 直至檔尾。</li>
<li>若能查表查到才用<strong>強校驗和</strong>計算並比較，若符合代表有該區塊，並紀錄該區塊存在。反之則重複步驟 4</li>
</ul>
</li>
</ol>
<p>這個策略流程很簡單，但是要突破的瓶頸就是速度。不斷地將區塊偏移並且查詢比較非常耗時，因此其核心是快速的產生校驗和，快速的得知沒有相符的區塊，以避免每個區塊都用速度較慢的強校驗和檢查。在此 rsync 設計的 Rolling Checksum 佔了非常重要的位置。</p>
<p>而 Rolling Checksum 其速度跟前述的將所有資料相加的速度是一樣快的，但又沒有說弱到一下就產生碰撞 ，因此非常適合作初步檢驗。</p>
<h4 id="Rolling-Checksum"><a href="#Rolling-Checksum" class="headerlink" title="Rolling Checksum"></a>Rolling Checksum</h4><p>為了說明方便， Rolling Checksum 簡化算式如下</p>
<pre><code>i 是 block 的開始位置，j 爲結束位置
bsize 則是一個 block 的大小

A = block[i] + block[i+1] + ... + block[j] // 從頭加到尾的意思
B = bsize * block[i] + (bsize - 1) * block[i+1] + ... + 1 * block[j]

rolling_checksum = A + B
</code></pre><p>假設一個 block 的大小爲 4 個 byte ， 且 block 內容依然是</p>
<pre><code>{5, 6, 7, 8}
</code></pre><p>其 Rolling Checksum 爲</p>
<pre><code>A = 5 + 6 + 7 + 8
B = (4 * 5) + (3 * 6) + (2 * 7) + (1 * 8)
</code></pre><p>那為什麼說其速度跟全部加起來一樣快呢？ 觀察 A 部分的全部相加，大概會這樣設計一個迴圈</p>
<pre><code>A = 0;
for (i = 0; i &lt; bsize; i++) {
    A += block[i];
}
</code></pre><p>將迴圈的流程稍微拆解一下，觀察一下 A 的內容</p>
<pre><code>1.) A = 5
2.) A = 5 + 6
3.) A = 5 + 6 + 7
4.) A = 5 + 6 + 7 + 8
</code></pre><p>可以發現當中的 5 出現了 4 次，6 出現了 3 次，竟然跟算式 B 的要求吻合（這當然是有設計過的呀）。<br>所以要計算 B 的值只需要在同一個迴圈累加一下 A 便能同時算出 B 的值。稍微改寫如下</p>
<pre><code>A = 0, B = 0;
for (i = 0; i &lt; bsize; i++) {
    A += block[i]
    B += A;
}
</code></pre><p>最後補正為了說明而簡化的部分，其實這部分就只是為了 hash table 查詢所需要的取餘數的部分</p>
<p>完整定義：</p>
<pre><code>A = (block[i] + block[i+1] + ... + block[j]) % M // 從頭加到尾的意思
B = (bsize * block[i] + (bsize - 1) * block[i+1] + ... + 1 * block[j]) % M

rolling_checksum = A + (2^16) * B
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;rsync 是 unix 上常常被用來同步兩臺主機資料的指令。而 rsync 令人稱道同步能力，不僅僅是把檔案抓下來到本機，而是厲害到可以只下載一個檔案中的差異部分，而非整份檔案抓下來。&lt;br&gt;
    
    </summary>
    
      <category term="後端技術" scheme="http://blog.unisharp.com/categories/%E5%BE%8C%E7%AB%AF%E6%8A%80%E8%A1%93/"/>
    
    
      <category term="工具小教室" scheme="http://blog.unisharp.com/tags/%E5%B7%A5%E5%85%B7%E5%B0%8F%E6%95%99%E5%AE%A4/"/>
    
      <category term="rsync" scheme="http://blog.unisharp.com/tags/rsync/"/>
    
  </entry>
  
  <entry>
    <title>設計小學堂-UI色彩實務應用篇</title>
    <link href="http://blog.unisharp.com/2017/04/28/%E8%A8%AD%E8%A8%88%E5%B0%8F%E5%AD%B8%E5%A0%82-UI%E8%89%B2%E5%BD%A9%E5%AF%A6%E5%8B%99%E9%81%8B%E7%94%A8%E7%AF%87/"/>
    <id>http://blog.unisharp.com/2017/04/28/設計小學堂-UI色彩實務運用篇/</id>
    <published>2017-04-27T16:00:00.000Z</published>
    <updated>2017-05-08T02:38:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>配色，看起來似乎是每個人都會的一件事，在很多人的心裡不過就是把幾個顏色湊在一起而已，好像沒什麼難度吧～不不不，這誤會可大了！</p>
<a id="more"></a>
<p>配色這回事，可是入門簡單，但精通很難的啊！！尤其如果不是科班出身，或有具有美感相關經驗的話，當自己親自嘗試配色的時候，有很高的機率會發現怎麼配怎麼怪，然後就會進入一個一直拉繪圖軟體的調色盤拉…超…久…的狀態。</p>
<p>不過不用太擔心，今天不藏私，用淺顯易懂的方法跟大家分享1個重點、3個原則、2個小技巧。降低做出不忍直視的UI機率。在追求顏色美美的UI之前，先達成不要醜啊～</p>
<h2 id="重點1：了解色彩的強度"><a href="#重點1：了解色彩的強度" class="headerlink" title="重點1：了解色彩的強度"></a>重點1：了解色彩的強度</h2><p><img src="color_wheel.png" alt="伊登12色相環"></p>
<h6 id="伊登12色相環"><a href="#伊登12色相環" class="headerlink" title="伊登12色相環"></a><em>伊登12色相環</em></h6><p>色彩本身是有視覺強弱之分的，整體來說由強至弱依序為：<br>暖色系(前進色) &gt; 冷色系(後退色) &gt; 灰階</p>
<p>而同類色系互比則是：<br>深色 &gt; 淺色<br><img src="color_demo.png" alt="同類色強弱順序"></p>
<p>相同顏色則是：<br>高彩度(飽和度) &gt; 低彩度(飽和度)<br>高明度 &lt; 低明度<br><img src="color_demo_2.png" alt="相同色強弱順序"></p>
<p>在知道怎麼區分色彩的視覺強弱程度後，實務上配色的時候就可以依循三個原則</p>
<h2 id="原則1：淺底深字，深底淺字"><a href="#原則1：淺底深字，深底淺字" class="headerlink" title="原則1：淺底深字，深底淺字"></a>原則1：淺底深字，深底淺字</h2><p>網頁Layout、UI按鈕，或是簡報設計等任何需要使用色彩與文字搭配的地方，都可以依循這個原則。當底色使用的顏色偏淺色時，上方的文字就使用深色；反之若底色為深色時，文字就使用淺色。</p>
<p>這個原則可以確保文字和底色之間有清晰的辨識度，不會因為兩者之間的視覺強度太接近，而造成文字看不清楚的情形。</p>
<p><img src="UI_demo_1.png" alt="按鈕UI錯誤範例"><br><img src="UI_demo_2.png" alt="按鈕UI正確範例"><br><img src="UI_demo_3.png" alt="圖文編排設計正確範例"></p>
<h2 id="原則2：強化重點，減弱其他"><a href="#原則2：強化重點，減弱其他" class="headerlink" title="原則2：強化重點，減弱其他"></a>原則2：強化重點，減弱其他</h2><p>當較多的內容或物件排放在一起，但沒有妥善處理的時候，就很有可能會發生畫面變得雜亂，東西太多不知道要先看哪的情形，瀏覽的流暢度和UI的使用體驗會變得較差</p>
<p><img src="UI_demo_4.png" alt="相同色強弱順序"><br><img src="UI_demo_5.png" alt="相同色強弱順序"></p>
<p>這時就必須找出畫面上最重要的內容，透過「強化重點，減弱其他」的作法將重點內容區隔出來</p>
<h4 id="變更色彩"><a href="#變更色彩" class="headerlink" title="變更色彩"></a>變更色彩</h4><p>直接給予畫面上的重要內容視覺強度較高(暖色系or高彩度or低明度)的顏色，並降低其他內容的強度</p>
<p><img src="UI_demo_6.png" alt="改變色彩"></p>
<h4 id="加上底色"><a href="#加上底色" class="headerlink" title="加上底色"></a>加上底色</h4><p>或是透過不同底色的差異，來加強重點內容</p>
<p><img src="UI_demo_7.png" alt="底色範例"></p>
<h4 id="改變字級"><a href="#改變字級" class="headerlink" title="改變字級"></a>改變字級</h4><p>在顏色不變的情況下，調整文字大小和粗細也是一種不錯的方法</p>
<p><img src="UI_demo_8.png" alt="字級範例"></p>
<p>不論是哪種作法，關鍵都在於拉大重點和其他內容在視覺上的對比度<del>(擴大貧富差距XD)</del>，讓重要的內容能成為視覺焦點</p>
<h2 id="原則3：越鮮豔，越謹慎"><a href="#原則3：越鮮豔，越謹慎" class="headerlink" title="原則3：越鮮豔，越謹慎"></a>原則3：越鮮豔，越謹慎</h2><p>色彩跟節日的關係非常密切，我們會看到某些顏色很常出現在一些節日裡，像是聖誕節的紅綠，中秋節的黃藍，情人節的粉紅等等</p>
<p>而配色是有流行性的，不同年代的配色趨勢也不太一樣，近幾年從Flat Design開始，到Google的Material Design，都能觀察出UI配色有越來越鮮豔的趨勢</p>
<p><img src="UI_demo_9.png" alt="2017色彩趨勢"><br><img src="UI_demo_10.png" alt="2017色彩趨勢"></p>
<p>但越鮮豔的顏色其實是越難掌握的，尤其是當多種高彩度的顏色要互相搭配的話，更需要對色彩有比較高的敏銳度，才不會讓畫面變霓虹燈，或看上去太刺眼</p>
<p>所以若不是很有把握的話，盡量不要選擇彩度太高的顏色</p>
<p>接下來分享2個相當基礎，但很實用的UI配色小技巧</p>
<h2 id="小技巧1：灰階-1個主色"><a href="#小技巧1：灰階-1個主色" class="headerlink" title="小技巧1：灰階+1個主色"></a>小技巧1：灰階+1個主色</h2><p>使用灰階加上一個主色，是在打造新產品的UI時很常使用的一個技巧</p>
<p>將主色作為Call to Action或是強調重點時所用的重要顏色，例如：產品LOGO、Call to Action的按鈕、重要的標題文字等等，而其他次要的內容則可用不同深淺的灰階來呈現</p>
<p><img src="UI_demo_11.png" alt="Airbnb 首頁"></p>
<p>由於灰階的視覺強度較低，跟主色相較之下，目光焦點會很容易的停留在有主色的元素上。</p>
<h2 id="小技巧2：灰階-1個主色-1個輔助色"><a href="#小技巧2：灰階-1個主色-1個輔助色" class="headerlink" title="小技巧2：灰階+1個主色+1個輔助色"></a>小技巧2：灰階+1個主色+1個輔助色</h2><p>除了灰階與主色之外，再加上一個輔助色</p>
<p>輔助色的視覺強度不能高於主色，才能維持主色為畫面焦點的作用。而輔助色可以運用在次要內容上，例如與Call to Action不同目的的按鈕，或是畫面上非最重要但也希望使用者留意的元素上。</p>
<p><img src="UI_demo_12.png" alt="invision 註冊頁"></p>
<p>上面分享的這些內容，是依據我自己的設計經驗所歸納出的幾個心得，希望能稍稍幫助大家在如何用色上的煩惱！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;配色，看起來似乎是每個人都會的一件事，在很多人的心裡不過就是把幾個顏色湊在一起而已，好像沒什麼難度吧～不不不，這誤會可大了！&lt;/p&gt;
    
    </summary>
    
      <category term="前端設計" scheme="http://blog.unisharp.com/categories/%E5%89%8D%E7%AB%AF%E8%A8%AD%E8%A8%88/"/>
    
    
      <category term="設計" scheme="http://blog.unisharp.com/tags/%E8%A8%AD%E8%A8%88/"/>
    
      <category term="UI" scheme="http://blog.unisharp.com/tags/UI/"/>
    
      <category term="色彩" scheme="http://blog.unisharp.com/tags/%E8%89%B2%E5%BD%A9/"/>
    
      <category term="設計小學堂" scheme="http://blog.unisharp.com/tags/%E8%A8%AD%E8%A8%88%E5%B0%8F%E5%AD%B8%E5%A0%82/"/>
    
  </entry>
  
  <entry>
    <title>上班原來也可以像是回到家</title>
    <link href="http://blog.unisharp.com/2017/04/16/%E4%B8%8A%E7%8F%AD%E5%8E%9F%E4%BE%86%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%83%8F%E6%98%AF%E5%9B%9E%E5%88%B0%E5%AE%B6/"/>
    <id>http://blog.unisharp.com/2017/04/16/上班原來也可以像是回到家/</id>
    <published>2017-04-15T16:00:00.000Z</published>
    <updated>2017-05-24T06:59:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>好的工作環境，能激發無限創意、能刺激分享、能夠孕育出一群同甘共苦的夥伴，我們共享、共創、共樂，把這樣的理念在辦公室每一隅都堅持實現。</p>
<a id="more"></a>
<p>從平面設計圖開始，設計團隊絞盡腦汁，考慮整體空間配置，排列出大小會議室、休閒空間及工作區域。</p>
<p><img src="平面配置圖.png" alt="悠夏爾科技施工照"></p>
<p>牆面顏色、傢俱配置、地板材質都不假他人之手，由設計團隊一手包辦</p>
<p><img src="3D模擬_01.png" alt="悠夏爾科技施工照"><br><img src="3D模擬_02.png" alt="悠夏爾科技施工照"></p>
<p>究竟能否符合企業形象及大家期待呢？<br>走！就讓小編帶你一窺這如夢似幻般的辦公室吧！</p>
<p><img src="door.png" alt="悠夏爾科技大門"></p>
<p>來到悠夏爾科技公司門前，一整面木質感的招牌與整片透明的玻璃大門，並且一眼盡收繽紛的彩漆與可愛的玄關，一覽無遺，這些都是我們的設計團隊，希望讓遠來洽公的客戶，都能感受到一種 Open Arm 的美式作風，像是主人賓帶著雀躍的笑容歡迎各位訪客！當然，另一方面，考量風水上對於門戶相沖的禁忌，這樣的玄關設計既務實又兼具美觀。</p>
<p><img src="hall_color.png" alt="悠夏爾科技辦公室設計規範"></p>
<p>設計團隊一開始考量了多種風格，工業風、無印簡約等等，最後決定走幼兒園style(誤)，延續充滿活力熱忱的公司文化，大膽使用了四種相異的色彩搭配在不同的牆面上，讓來到辦公室的夥伴和訪客們，都能感受到一種活潑、好心情的氛圍。</p>
<p>設計團隊對於會議室與主辦公室，秉持著開放式的設計，設立便於討論的會議空間，也將主辦公室的隔板打破，讓人與人之間溝通變得更直接，更能高效率地溝通與協同工作，把整個團隊氛圍更添積極與活力！</p>
<p><img src="meeting_room.png" alt="悠夏爾科技會議室"></p>
<p><img src="workshop.png" alt="悠夏爾科技主辦公室"></p>
<p>再往辦公間裡面走。還記得「再忙，都要跟你喝杯咖啡」嗎？廣告裡的正咩總是坐在美麗的高腳椅上，面對著城市的風景，原來工作台也可以很詩情畫意，帶著另一種從容更能激發出無限的靈感，也許下一秒，一束銀河般的星河乍現，你文思枯竭的工作已被溢滿！</p>
<p><img src="bar.png" alt="悠夏爾科技吧台"></p>
<p>一處可以轉換心情、療癒身心的沙發區，是設計團隊特別為緊繃、糾結、卡關的工作者，安排的靈感溫室，也特別選用藍色，一種沈鬱卻能讓人靜下心的色調，就像回家一樣，陷在舒適的沙發上，許多不解都有解了！</p>
<p><img src="sofa_area.png" alt="悠夏爾科技沙發區"></p>
<p>讓我們來看看設計團隊到底施了什麼魔法，讓施工前後造成超強大的落差<br><img src="before.png" alt="悠夏爾科技施工照"><br><img src="before1.png" alt="悠夏爾科技施工照"><br>還有更多巧思藏在辦公室的小地方，例如會議室與主辦公室都採取 Apple TV 無線投影的方式，每一個人在辦公室任何一處，都能發送投影訊號，通知大家”我想分享喔”，讓共享無分界、無阻礙、無限延伸！</p>
<p><img src="family.png" alt="悠夏爾科技人員"></p>
<p>We work smart.<br>We bulid great websites.<br>我們是 悠夏爾科技</p>
<p><img src="quality.png" alt="悠夏爾科技沙發區"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好的工作環境，能激發無限創意、能刺激分享、能夠孕育出一群同甘共苦的夥伴，我們共享、共創、共樂，把這樣的理念在辦公室每一隅都堅持實現。&lt;/p&gt;
    
    </summary>
    
      <category term="生活雜記" scheme="http://blog.unisharp.com/categories/%E7%94%9F%E6%B4%BB%E9%9B%9C%E8%A8%98/"/>
    
    
      <category term="在悠夏爾的生活" scheme="http://blog.unisharp.com/tags/%E5%9C%A8%E6%82%A0%E5%A4%8F%E7%88%BE%E7%9A%84%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>有效率會議的五大原則</title>
    <link href="http://blog.unisharp.com/2017/02/20/%E6%9C%89%E6%95%88%E7%8E%87%E6%9C%83%E8%AD%B0%E7%9A%84%E4%BA%94%E5%A4%A7%E5%8E%9F%E5%89%87/"/>
    <id>http://blog.unisharp.com/2017/02/20/有效率會議的五大原則/</id>
    <published>2017-02-19T16:00:00.000Z</published>
    <updated>2017-04-25T08:06:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>每次跟師父開會，都會有一種很迅速就結束會議的錯覺，我心裡常會這樣想：『怎麼這麼快就會有結論了？』。</p>
<p>本篇偷偷列了一下最近觀察到的秘訣（無論是面對面的會議或是電話會議，都適用）：<br><a id="more"></a></p>
<h2 id="一、事先必定擬定議題"><a href="#一、事先必定擬定議題" class="headerlink" title="一、事先必定擬定議題"></a>一、事先必定擬定議題</h2><p>重點不是擬定議題，而是師父都會針對這些主題事先了解：哪些需要討論？哪些是心中已經擬定好解決方案，只是利用會議碰面的時間，快速溝通議題？</p>
<p>所以往往確定議題後，師父會逐項的思考細節，可能會跟 RD 討論、可能會問 Art 的意見，或是客戶會不會有問題？我有沒有其他的解決方案？</p>
<p>總之，師父是腦袋裝好東西去開會，不是頭腦放空、雙眼無神的參加會議，對議題的掌握度當然會很好。</p>
<h2 id="二、跟著議程走，不要離題"><a href="#二、跟著議程走，不要離題" class="headerlink" title="二、跟著議程走，不要離題"></a>二、跟著議程走，不要離題</h2><p>議題既然已經擬定好了，就是針對這些主題需要有決議。但在會議中常常會忽然冒出一個問題，而且常常為了這個問題浪費好幾十分鐘討論，不僅會離題，而且本來需要討論的議題往往沒討論到，或是花費了太多時間在其他議題，本該討論的事情，都沒有討論，或是草草結束。</p>
<p>不重要的小事不要在會議裡面討論，會議開很久的原因，往往是花了很多時間在討論不重要的小事，當會議走向變成了討論雞毛蒜皮的小地方時，師父常常都會用一句話來阻止這件事情的發生：『這些細節我們在會議結束後討論好嗎？我們今天先決定大方向跟取得大家的共識』。</p>
<h2 id="三、不要在會議時才思考如何解決"><a href="#三、不要在會議時才思考如何解決" class="headerlink" title="三、不要在會議時才思考如何解決"></a>三、不要在會議時才思考如何解決</h2><p>師父常說：</p>
<blockquote>
<p>『會議是拿來凝聚共識，或是快速溝通議題，不是把寶貴的會議時間，當成腦力激盪大會』。</p>
</blockquote>
<p>前面第一點有提到『對於議題要事先掌握』，所以會議時我們可以直接說結論，或是用引導的方式，帶出結論。</p>
<p>絕對不可以事前什麼都不準備，會議的開頭就問：『針對這個議題，各位有什麼想法嗎』？然後一群人開始七嘴八舌的討論議題。萬萬不可。</p>
<p>會議上往往會冒出其他的議題，前面有提到『不要討論不重要的小事』，但如果這個冒出來的議題很重要呢？</p>
<p>如果花了五分鐘，還沒有結果時，師父會說：</p>
<blockquote>
<p>『這個我們會回去思考，等有比較明確的解決方案時，會利用 E-Mail 說明或是再約個會議跟各位報告』。</p>
</blockquote>
<p>但是這一句話必須建立在客戶已經跟你建立起不錯關係後，他也知道你的能力時，才能說這句話。</p>
<p>在新客戶面前，我們要展現自己的專業，展現對於這個產業的獨特見解，若事事都說回去思考，反而會讓人覺得你的思考還不夠全方位。客戶會買單，往往是因為他覺得你夠專業，他問的問題你馬上都能夠達的出來；若事事都要回去跟工程師討論，那你怎麼不帶工程師來？這樣一來一回，豈不是浪費時間嗎？</p>
<h2 id="四、避免非必要的實體會議"><a href="#四、避免非必要的實體會議" class="headerlink" title="四、避免非必要的實體會議"></a>四、避免非必要的實體會議</h2><p>雖然面對面的討論，可以快速解決與回應問題，但是很多情況是可以不需要面對面開會，有時候只是例行性的報告，或是簡單的議題，往往可以利用 E-Mail / 電話來討論，不僅可以省去舟車勞頓的麻煩，而且也比較彈性。</p>
<p>客戶很容易因為一兩個議題，就想要約會議。若不經思考，我們就答應參加，其實是浪費時間。</p>
<p>若可以用 E-Mail / 電話來討論的議題，師父絕對會利用這些工具。<br>師父常客戶這樣說：『這個議題我覺得我們用電話溝通就好了』。前提條件是因為你夠專業，因為你的解釋往往是很清楚的，客戶相信你，所以這樣推掉不必要的會議，客戶也不會有其他意見。若是你連見面開會時，對於議題的掌握程度都二二六六了，客戶還可能讓你這樣作嗎？</p>
<h2 id="五、慎選與會成員"><a href="#五、慎選與會成員" class="headerlink" title="五、慎選與會成員"></a>五、慎選與會成員</h2><p>開會並不是參與人數越多越好，跟主題沒有關係的人員，最好不要出席；跟主題有關係的人員，也邀請主要的核心人員就好。為什麼呢？因為人多意見多，一人一句話，可能就花費了不少時間，特別是那些沒有關係的人員，常常搞不清楚狀況，又愛發言，往往拖棚，浪費時間（您發言是在刷存在感嗎？）。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;每次跟師父開會，都會有一種很迅速就結束會議的錯覺，我心裡常會這樣想：『怎麼這麼快就會有結論了？』。&lt;/p&gt;
&lt;p&gt;本篇偷偷列了一下最近觀察到的秘訣（無論是面對面的會議或是電話會議，都適用）：&lt;br&gt;
    
    </summary>
    
      <category term="專案管理" scheme="http://blog.unisharp.com/categories/%E5%B0%88%E6%A1%88%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="溝通" scheme="http://blog.unisharp.com/tags/%E6%BA%9D%E9%80%9A/"/>
    
      <category term="會議" scheme="http://blog.unisharp.com/tags/%E6%9C%83%E8%AD%B0/"/>
    
  </entry>
  
  <entry>
    <title>一套使用 jade (pug) 轉為 laravel blade 的前端工作流程</title>
    <link href="http://blog.unisharp.com/2017/02/14/%E4%B8%80%E5%A5%97%E4%BD%BF%E7%94%A8%20jade%20(pug)%20%E8%BD%89%E7%82%BA%20laravel%20blade%20%E7%9A%84%E5%89%8D%E7%AB%AF%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/"/>
    <id>http://blog.unisharp.com/2017/02/14/一套使用 jade (pug) 轉為 laravel blade 的前端工作流程/</id>
    <published>2017-02-13T16:00:00.000Z</published>
    <updated>2017-04-25T08:05:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>這篇文章介紹一套使用 Laravel 配合 Jade (Pug) 作為樣板引擎的工作流程，這套流程我們已經使用了近三年，解決了許多工程師與設計師在合作上的重工，希望對你們有幫助 :)</p>
<a id="more"></a>
<h2 id="傳統的設計師-gt-工程師的合作流程"><a href="#傳統的設計師-gt-工程師的合作流程" class="headerlink" title="傳統的設計師 =&gt; 工程師的合作流程"></a>傳統的設計師 =&gt; 工程師的合作流程</h2><p>傳統上，設計師在製作完網頁設計圖後，會由切版人員（這個人員可能是設計師自己，也有可能是前端工程師）將設計圖製作成靜態的 HTML 及 CSS，接下來再交給工程師套程式。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">設計 (圖片) -&gt; 切版 （HTML/CSS）-&gt; 套版（程式）</div></pre></td></tr></table></figure>
<p><img src="frontend-flow.png" alt="Frontend Flow"></p>
<h2 id="Laravel-blade"><a href="#Laravel-blade" class="headerlink" title="Laravel blade"></a>Laravel blade</h2><p>Laravel 預設是使用 blade 作為樣板引擎作為動態網頁的樣板，它具有良好的 extend 及 include 設計，以下例子說明了 include 的用法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        @include(&apos;share.head&apos;)</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        @include(&apos;share.header&apos;)</div><div class="line"></div><div class="line">        &lt;div class=&quot;container&quot;&gt;</div><div class="line">            @yield(&apos;content&apos;)</div><div class="line">        &lt;/div&gt;</div><div class="line"></div><div class="line">        @include(&apos;share.footer&apos;)</div><div class="line">    &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p> layout - view 結構中的 layout。</p>
<h2 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h2><p>對 laravel 工程師來說，製作畫面的方法是寫 blade，並且使用 blade 的 layout 與 view 使得我們在修改共用的畫面時只需要修改一次（因為共用的畫面皆有專屬的 blade 代表）。</p>
<p>但真正實行時，才發現此處還隱藏了一個大部分的人習以為常的重工 — 通常 html 及 css 是由<strong>設計師</strong>提供的，如果頁面已經套完 blade 了，設計師再次修改 html 與 css 會怎麼樣呢？工程師需要將設計師修改的 html、css 與 blade 作比對，將兩著差異更新到 blade 的 layout - view 結構，而且這樣的修改會一再發生。</p>
<p>要怎麼解決這樣的重工呢？我們想到的解法是</p>
<p>「讓設計師學會基本的 laravel 及 blade，與工程師一同修改 blade」</p>
<p>那麽如果設計師喜歡使用 jade (pug) 呢？使用 blade 就沒有 jade (pug) 優美的語法及方便的 mixin 了（註: Laravel 5.4 有 view component 可以使用）。而且使用 blade 必須要有 php 執行環境，如果設計師只想快速驗證畫面，不想要跑起 php server 呢？</p>
<p>於是我們製作了一套將 jade 轉換爲 blade 的工作流程：</p>
<h2 id="改善的流程-使用-jade-pug-產生-blade"><a href="#改善的流程-使用-jade-pug-產生-blade" class="headerlink" title="改善的流程 - 使用 jade (pug) 產生 blade"></a>改善的流程 - 使用 jade (pug) 產生 blade</h2><p><img src="pug-to-blade-flow.png" alt="pug to blade flow"><br>見上圖</p>
<p>設計師與工程師寫 jade 及 less ，放在 fe-src ( FrontEnd Source) 目錄中，經過編譯 （compile, 或更貼切地應稱為 transpile) 轉為 html 及 css 至 fe-dest (frontend destination) 目錄，我們也將 javascript 及 image 放到此目錄，於是 fe-dest 目錄就是一個可以直接用瀏覽器預覽的靜態網站了。</p>
<p>在流程的最後，我們也同時自動將這些生成的 html 複製並命名為 .blade.php 到 laravel 的 view 路徑下，同時將靜態資源複製到 public 中，即完成了這套流程。</p>
<h2 id="要如何使用這套流程？"><a href="#要如何使用這套流程？" class="headerlink" title="要如何使用這套流程？"></a>要如何使用這套流程？</h2><h3 id="目錄結構"><a href="#目錄結構" class="headerlink" title="目錄結構"></a>目錄結構</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">fe-src</div><div class="line">├── less</div><div class="line">│   ├── _variables.less</div><div class="line">│   └── app.less</div><div class="line">└── pug</div><div class="line">    ├── _layout</div><div class="line">    │   └── app.pug</div><div class="line">    └── index.pug</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">fe-dest</div><div class="line">├── css</div><div class="line">│   └── app.css</div><div class="line">└── pug</div><div class="line">    └── index.html</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">public</div><div class="line">└── css</div><div class="line">    └── app.css</div><div class="line"></div><div class="line">resources</div><div class="line">└── views</div><div class="line">    └── index.blade.php</div></pre></td></tr></table></figure>
<h3 id="Makefile"><a href="#Makefile" class="headerlink" title="Makefile"></a>Makefile</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">init:</div><div class="line">    yarn add gulp gulp-pug gulp-less gulp-filter gulp-notify gulp-sourcemaps gulp-autoprefixer browser-sync @unisharp/gulp-pug-inheritance</div><div class="line"></div><div class="line">fe-build:</div><div class="line">    ./node_modules/.bin/gulp</div><div class="line"></div><div class="line">watch:</div><div class="line">    ./node_modules/.bin/gulp watch</div></pre></td></tr></table></figure>
<h3 id="gulpfile-js"><a href="#gulpfile-js" class="headerlink" title="gulpfile.js"></a>gulpfile.js</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">const gulp = require(&apos;gulp&apos;);</div><div class="line">const pug = require(&apos;gulp-pug&apos;);</div><div class="line">const less = require(&apos;gulp-less&apos;);</div><div class="line">const filter = require(&apos;gulp-filter&apos;);</div><div class="line">const notify = require(&apos;gulp-notify&apos;);</div><div class="line">const sourcemaps = require(&apos;gulp-sourcemaps&apos;);</div><div class="line">const autoprefixer = require(&apos;gulp-autoprefixer&apos;);</div><div class="line">const browserSync = require(&apos;browser-sync&apos;).create();</div><div class="line">const pugInheritance = require(&apos;@unisharp/gulp-pug-inheritance&apos;);</div><div class="line"></div><div class="line">gulp.task(&apos;pug&apos;, () =&gt;</div><div class="line">  gulp.src(&apos;fe-src/pug/**/*.pug&apos;)</div><div class="line">      .pipe(filter(file =&gt; !/\/fe-src\/pug\/_/.test(file.path)))</div><div class="line">      .pipe(pug(&#123; pretty: true &#125;))</div><div class="line">      .on(&apos;error&apos;, notify.onError(&apos;Error: &lt;%= error.message %&gt;&apos;))</div><div class="line">      .pipe(gulp.dest(&apos;fe-dest&apos;))</div><div class="line">      .pipe(notify(&apos;File: fe-dest/&lt;%= file.relative %&gt; Compiled!&apos;))</div><div class="line">      .pipe(rename(&#123; extname: &apos;.blade.php&apos; &#125;))</div><div class="line">      .pipe(gulp.dest(&apos;resources/views&apos;))</div><div class="line">      .pipe(notify(&apos;File: resources/views/&lt;%= file.relative %&gt; Compiled!&apos;))</div><div class="line">);</div><div class="line"></div><div class="line">gulp.task(&apos;less&apos;, () =&gt;</div><div class="line">  gulp.src(&apos;fe-src/less/app.less&apos;)</div><div class="line">      .pipe(sourcemaps.init())</div><div class="line">      .pipe(sass())</div><div class="line">      .on(&apos;error&apos;, notify.onError(&apos;Error: &lt;%= error.message %&gt;&apos;))</div><div class="line">      .pipe(autoprefixer(&#123; browsers: [&apos;last 2 versions&apos;] &#125;))</div><div class="line">      .pipe(sourcemaps.write(&apos;.&apos;))</div><div class="line">      .pipe(gulp.dest(&apos;fe-dest/css&apos;))</div><div class="line">      .pipe(notify(&apos;File: fe-dest/css/&lt;%= file.relative %&gt; Compiled!&apos;))</div><div class="line">      .pipe(browserSync.stream(&#123; match: &apos;**/*.css&apos; &#125;))</div><div class="line">      .pipe(gulp.dest(&apos;public/css&apos;))</div><div class="line">      .pipe(notify(&apos;File: public/css/&lt;%= file.relative %&gt; Compiled!&apos;))</div><div class="line">);</div><div class="line"></div><div class="line">gulp.task(&apos;watch&apos;, () =&gt; &#123;</div><div class="line">  browserSync.init(&#123;</div><div class="line">    host: &apos;0.0.0.0&apos;,</div><div class="line">    server: &apos;fe-dest&apos;,</div><div class="line">    open: false</div><div class="line">  &#125;);</div><div class="line"></div><div class="line">  gulp.watch(&apos;fe-src/pug/**/*.pug&apos;, e =&gt;</div><div class="line">    gulp.src(e.path, &#123; base: &apos;fe-src/pug&apos; &#125;)</div><div class="line">        .pipe(pugInheritance(&apos;fe-src/pug/**/*.pug&apos;))</div><div class="line">        .pipe(filter(file =&gt; !/\/fe-src\/pug\/_/.test(file.path)))</div><div class="line">        .pipe(pug(&#123; pretty: true &#125;))</div><div class="line">        .on(&apos;error&apos;, notify.onError(&apos;Error: &lt;%= error.message %&gt;&apos;))</div><div class="line">        .pipe(notify(&apos;File: fe-dest/&lt;%= file.relative %&gt; Compiled!&apos;))</div><div class="line">        .pipe(rename(&#123; extname: &apos;.blade.php&apos; &#125;))</div><div class="line">        .pipe(gulp.dest(&apos;resources/views&apos;))</div><div class="line">        .pipe(notify(&apos;File: resources/views/&lt;%= file.relative %&gt; Compiled!&apos;))</div><div class="line">        .pipe(browserSync.reload(&#123; stream: true &#125;))</div><div class="line">  );</div><div class="line">  gulp.watch(&apos;./fe-src/less/**/*.less&apos;, [&apos;less&apos;]);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(&apos;default&apos;, [&apos;pug&apos;, &apos;less&apos;]);</div></pre></td></tr></table></figure>
<h3 id="第一次執行"><a href="#第一次執行" class="headerlink" title="第一次執行"></a>第一次執行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make init</div></pre></td></tr></table></figure>
<h3 id="編譯"><a href="#編譯" class="headerlink" title="編譯"></a>編譯</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make fe-build</div></pre></td></tr></table></figure>
<h3 id="LiveReload"><a href="#LiveReload" class="headerlink" title="LiveReload"></a>LiveReload</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make watch</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;這篇文章介紹一套使用 Laravel 配合 Jade (Pug) 作為樣板引擎的工作流程，這套流程我們已經使用了近三年，解決了許多工程師與設計師在合作上的重工，希望對你們有幫助 :)&lt;/p&gt;
    
    </summary>
    
      <category term="後端技術" scheme="http://blog.unisharp.com/categories/%E5%BE%8C%E7%AB%AF%E6%8A%80%E8%A1%93/"/>
    
    
      <category term="Laravel" scheme="http://blog.unisharp.com/tags/Laravel/"/>
    
  </entry>
  
  <entry>
    <title>所有決議都必須留下紀錄 - 凡走過，必留下痕跡</title>
    <link href="http://blog.unisharp.com/2017/02/14/%E6%89%80%E6%9C%89%E6%B1%BA%E8%AD%B0%E9%83%BD%E5%BF%85%E9%A0%88%E7%95%99%E4%B8%8B%E7%B4%80%E9%8C%84%20-%20%E5%87%A1%E8%B5%B0%E9%81%8E%EF%BC%8C%E5%BF%85%E7%95%99%E4%B8%8B%E7%97%95%E8%B7%A1/"/>
    <id>http://blog.unisharp.com/2017/02/14/所有決議都必須留下紀錄 - 凡走過，必留下痕跡/</id>
    <published>2017-02-13T16:00:00.000Z</published>
    <updated>2017-04-25T08:05:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>師父跟我說，不管你用什麼方式或工具跟客戶討論事情，一定要留下紀錄，這件事情非常重要，一定要徹底執行。</p>
<p>因為人總是健忘的，不管是客戶或是我們，當下覺得理所當然的決議，可能過了一個禮拜，很多的枝微細節，一定會被遺忘，沒有例外。<br><a id="more"></a><br>以下舉幾個實務的作法：</p>
<h2 id="會議討論-電話溝通"><a href="#會議討論-電話溝通" class="headerlink" title="會議討論/電話溝通"></a>會議討論/電話溝通</h2><p>開完會或講完電話有共識後，一定要發一封信，說明剛剛的決議（會議記錄）。</p>
<p>師父不喜歡很死板的會議記錄，所以他通常要我發出決議內容就好，大概可以這麼寫：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Hi Jason,</div><div class="line"></div><div class="line">根據中秋節烤肉專案的流程議題，剛剛已經在電話內跟您討論過，以下為最終的結論：</div><div class="line">1. 採買人員每次出發前往採買前，必須填寫『採購清單』，並且經由總務部主管審核通過，才可出發採買。</div><div class="line">2. 生火人員必須遵照『木炭排列SOP』之流程，排列木炭；生火場所必須在空氣流通的地方。</div><div class="line">3. .....</div><div class="line">4. .....</div><div class="line">5. 烤肉人員所烤出的第一片肉，一定要讓大門警衛先品嚐。</div><div class="line"></div><div class="line">以上五點需請相關人員遵守，若因違反上述規定，而造成食物美味不如預期，我司將不負責處理。</div><div class="line">上述之決議將於 12/04 開始實施，若您有任何疑慮，請在明天(12/03)之前跟我聯絡。</div><div class="line"></div><div class="line">謝謝您，祝您順心。</div><div class="line"></div><div class="line">Peggy 2016/12/02</div></pre></td></tr></table></figure>
<p>記得，這封信除了寄給客戶之外，也一定要 CC 給對方的相關人員，還有自己的職務代理人（或相關人員），未來若真的需要查這個議題時，也比較好追查。</p>
<h2 id="使用通訊軟體溝通"><a href="#使用通訊軟體溝通" class="headerlink" title="使用通訊軟體溝通"></a>使用通訊軟體溝通</h2><p>在專案執行過程中，難免會用通訊軟體（Line/Skype/Slack/ etc）跟客戶討論事情，有時候整個對話過程經過了一個小時，才有結論。</p>
<p>若是有結論後，就直接結束了這個話題，會被師父罵。</p>
<p>那應該怎麼作呢？我們來看一下這個情境：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Peggy：Hi Jason, 你有空嗎？想要討論一下中秋節烤肉專案的流程議題。</div><div class="line">Jason：好啊，怎麼了嗎？</div><div class="line">Peggy：採買人員填寫完採購清單就可以去採買了嗎？</div><div class="line">Jason：是啊</div><div class="line">Peggy：但是之前你不是有說這樣子沒有人把關，怕採買人員亂買。</div><div class="line">Jason：對齁！！！</div><div class="line">Jason：不然必須讓總務部主管審核通過才可以採買</div><div class="line">Peggy：好，沒問題。</div><div class="line">Jason：...(下略一千字)</div><div class="line">Peggy：...(下略一千字)</div><div class="line">Peggy：所以烤肉人員所烤出的第一片肉，一定要讓大門總機先品嚐。</div><div class="line">Jason：沒錯。</div><div class="line">Peggy：好的，我知道了，那先這樣囉，謝謝。</div><div class="line">Jason：881</div></pre></td></tr></table></figure>
<p>感覺上面的對話已經有結論了，害我被師父罵的原因是什麼呢？</p>
<blockquote>
<p>你的結論，不一定是客戶心中的那個畫面</p>
</blockquote>
<p>正確的作法是這樣：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">Peggy：Hi Jason, 你有空嗎？想要討論一下中秋節烤肉專案的流程議題。</div><div class="line">Jason：好啊，怎麼了嗎？</div><div class="line">Jason：...(下略一千字)</div><div class="line">Peggy：...(下略一千字)</div><div class="line">Peggy：所以烤肉人員所烤出的第一片肉，一定要讓大門總機先品嚐。</div><div class="line">Jason：沒錯。</div><div class="line">Peggy：根據我們前面說的，大致可以歸納成五點：</div><div class="line">Peggy：1. 採買人員每次出發前往採買前....</div><div class="line">Peggy：2. 生火人員必須遵照『木炭排列SOP』之流程...</div><div class="line">Peggy：3. .....</div><div class="line">Peggy：4. .....</div><div class="line">Peggy：5. 烤肉人員所烤出的第一片肉，一定要讓大門總機先品嚐。</div><div class="line">Peggy：上面這樣對嗎？</div><div class="line">Jason：啊！！不是！我說錯了，應該是讓大門警衛品嚐啦，我剛頭暈講錯了</div><div class="line">Peggy：好，那我改一下：</div><div class="line">Peggy：============(這是分隔線)==============</div><div class="line">Peggy：1. 採買人員每次出發前往採買前....</div><div class="line">Peggy：2. 生火人員必須遵照『木炭排列SOP』之流程...</div><div class="line">Peggy：3. .....</div><div class="line">Peggy：4. .....</div><div class="line">Peggy：5. 烤肉人員所烤出的第一片肉，一定要讓大門警衛先品嚐。</div><div class="line">Peggy：以上五點</div><div class="line">Jason：是的，完全正確。</div><div class="line">Peggy：好的，那我會一併把上面這五點結論發一封信出來。</div><div class="line">Jason：好，辛苦你了，881</div></pre></td></tr></table></figure>
<p>看到了嗎？連這裡都要下結論，我真的好累～你要的我都學不會～</p>
<p>不只是這樣，最後還要發一封信給客戶，把剛剛的結論再說一次（內容就跟會議討論/電話溝通那封信一樣就好），還要把通訊軟體最後的決議畫面截圖下來，放在這封信件當附件。</p>
<p>這張截圖一定要有這五點決議內容，與客戶回覆說『沒問題』的會談過程（大概就是從『分隔線』一直到最後的『辛苦你了，881』）。</p>
<p>雖然上面這些步驟比較花功夫，但不可否認的，這些真的很有效。</p>
<p>師父用這些招式，狠狠的打了許多澳洲客人的臉，讓我崇拜不已（不過，師父他到底怎麼從信件大海裡面撈出他要的這些證據啊….）。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;師父跟我說，不管你用什麼方式或工具跟客戶討論事情，一定要留下紀錄，這件事情非常重要，一定要徹底執行。&lt;/p&gt;
&lt;p&gt;因為人總是健忘的，不管是客戶或是我們，當下覺得理所當然的決議，可能過了一個禮拜，很多的枝微細節，一定會被遺忘，沒有例外。&lt;br&gt;
    
    </summary>
    
      <category term="專案管理" scheme="http://blog.unisharp.com/categories/%E5%B0%88%E6%A1%88%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="溝通" scheme="http://blog.unisharp.com/tags/%E6%BA%9D%E9%80%9A/"/>
    
      <category term="會議" scheme="http://blog.unisharp.com/tags/%E6%9C%83%E8%AD%B0/"/>
    
  </entry>
  
  <entry>
    <title>觀察實體世界中的「使用者體驗」</title>
    <link href="http://blog.unisharp.com/2017/02/13/%E8%A7%80%E5%AF%9F%E5%AF%A6%E9%AB%94%E4%B8%96%E7%95%8C%E4%B8%AD%E7%9A%84%E3%80%8C%E4%BD%BF%E7%94%A8%E8%80%85%E9%AB%94%E9%A9%97%E3%80%8D/"/>
    <id>http://blog.unisharp.com/2017/02/13/觀察實體世界中的「使用者體驗」/</id>
    <published>2017-02-12T16:00:00.000Z</published>
    <updated>2017-04-25T08:05:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>網路產業近幾年來出現許多如「User Experience」、「Big Data」等被視為趨勢的名詞，衍伸的職務「使用者經驗設計師」、「數據分析師」也是網路圈中的熱門話題，相關的交流和講座一直都相當熱絡，各種分析數據、使用者的工具<br><a id="more"></a><br>也不斷的推陳出新。而這些研究和分析最終的核心精神，都是希望能夠全方位的了解使用者，並盡可能的讓使用者與產品接觸時有良好的使用體驗。</p>
<p>雖然這些名詞近幾年才出現，但我一直認為，為使用者提供良好體驗這件事，其實一直都存在於實體世界中，甚至是被譽為經營之神的王永慶，也早在好幾十年前就已經開始做這些事情了。</p>
<blockquote>
<p>王永慶15歲小學畢業後，到一家小米店做學徒。第二年，他用父親借來的200元錢做本金自己開了一家小米店。為了和隔壁那家日本米店競爭，王永慶頗費了一番心思。</p>
<p>當時大米加工技術比較落後，出售的大米里混雜著米糠、沙粒、小石頭等，買賣雙方都是見怪不怪。王永慶則多了一個心眼，每次賣米前都把米中的雜物揀乾淨，這一額外的服務深受顧客歡迎。</p>
<p>王永慶賣米多是送米上門，他在一個本子上詳細記錄了顧客家有多少人、一個月吃多少米、何時發薪等。算算顧客的米該吃完了，就送米上門；等到顧客發薪的日子，再上門收取米款。</p>
<p>他給顧客送米時，並非送到就算。他先幫人家將米倒進米缸里。如果米缸里還有米，他就將舊米倒出來，將米缸刷乾淨，然後將新米倒進去，將舊米放在上層。這樣，米就不至於因陳放過久而變質。他這個小小的舉動令不少顧客深受感動，鐵了心專買他的米。</p>
<p>就這樣，他的生意越來越好。從這家小米店起步，王永慶最終成為今日台灣工業界的「龍頭老大」。</p>
</blockquote>
<p>是不是覺得有點熟悉？王永慶當年在筆記本上紀錄顧客的消費資訊，並依此優化顧客的消費體驗，不就跟現在UX和Big Data的在做的事情相同嗎。只是隨著時代和科技的改變，紀錄的方式從手寫的筆記本變成了網路上的程式，但提供良好體驗的核心精神並沒有不同。</p>
<p><img src="img_20170213_02.jpg" alt="使用者體驗"></p>
<p>這樣的核心精神也存在於實體世界的各行各業中。回想一下自己在餐廳用餐時的經驗，服務人員觀察顧客們的用餐情況，餐點有沒有打翻，水是不是已經喝完，然後即時的提供服務。這跟我們透過熱點分析、點擊率等方式了解使用者如何使用網站和APP，本質上並沒有不同，都是去了解使用者使用產品時的情形，然後將不符預期或造成使用者困擾的部分修正掉。</p>
<p>未來在幫任何產品做UX優化時都要提醒自己，不管「使用者體驗」這個名詞如何變更，測試和紀錄數據的工具如何推陳出新，都不要迷失在這些名詞或工具的絢麗技術裡。將目光放遠停留在真正的使用者身上，讓使用者有更加良好的使用體驗，才是我們的最終目的！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;網路產業近幾年來出現許多如「User Experience」、「Big Data」等被視為趨勢的名詞，衍伸的職務「使用者經驗設計師」、「數據分析師」也是網路圈中的熱門話題，相關的交流和講座一直都相當熱絡，各種分析數據、使用者的工具&lt;br&gt;
    
    </summary>
    
      <category term="專案管理" scheme="http://blog.unisharp.com/categories/%E5%B0%88%E6%A1%88%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="UX" scheme="http://blog.unisharp.com/tags/UX/"/>
    
  </entry>
  
  <entry>
    <title>凱特的花蓮觀遊集錦</title>
    <link href="http://blog.unisharp.com/2017/01/17/%E5%87%B1%E7%89%B9%E7%9A%84%E8%8A%B1%E8%93%AE%E8%A7%80%E9%81%8A%E9%9B%86%E9%8C%A6/"/>
    <id>http://blog.unisharp.com/2017/01/17/凱特的花蓮觀遊集錦/</id>
    <published>2017-01-16T16:00:00.000Z</published>
    <updated>2017-05-22T09:00:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>自從蘇花開通後，東部像是多了一道門，越來越多親朋好友你鄰居不遠千里來到東部踏踏青，離門口最近的宜蘭被開發地早，後來花蓮也相繼有蓬勃的發展。<br>小編當年看著一個學校簡介，被迷惑地不要不要的，就這麼來到了花蓮<br><a id="more"></a><br>，一待就是五年，從原始（ㄏ ㄨ ㄤ ㄌ ㄧ ㄤˊ）的景色到改建後的繁華景象，<br>真心覺得這一趟旅程像是在時空中穿梭般令我難忘，是一個此生必遊一次的好地方，所以小編特別整理出小部分（跋山涉水就不收錄了）的景點，也都是小編直到現在仍然一訪再訪的景點。</p>
<h1 id="花蓮景點"><a href="#花蓮景點" class="headerlink" title="花蓮景點"></a>花蓮景點</h1><h4 id="知卡宣公園"><a href="#知卡宣公園" class="headerlink" title="知卡宣公園"></a>知卡宣公園</h4><ul>
<li>地址：花蓮縣吉安鄉中正路二段299號 (花蓮監理站對面)</li>
<li>開放時間：8:00~18:00 (戲水區僅暑期開放)</li>
<li>門票：免費</li>
<li>參考文：<br>[暑期版] <a href="http://ppt.cc/jfpqa" target="_blank" rel="external">http://ppt.cc/jfpqa</a><br>[非暑期版] <a href="http://ppt.cc/xJ4Sn" target="_blank" rel="external">http://ppt.cc/xJ4Sn</a><blockquote>
<p>小編推薦：園區內包含植物園區、迷宮樹叢和各式大大小小植物與花的造景，也有小朋友遊憩區，非常適合拍照。園區佔地面積不小，建議停留兩小時以上。</p>
</blockquote>
</li>
</ul>
<h4 id="台肥海洋深層水園區"><a href="#台肥海洋深層水園區" class="headerlink" title="台肥海洋深層水園區"></a>台肥海洋深層水園區</h4><ul>
<li>參考文： <a href="http://ppt.cc/XWm14" target="_blank" rel="external">http://ppt.cc/XWm14</a><blockquote>
<p>小編大驚！！台肥海洋深層水園區全面設備檢修公告， 最後營業日為2016年11月28日。</p>
</blockquote>
</li>
</ul>
<h4 id="花蓮太平洋公園（原南濱公園）-北濱公園-北濱外環道-和平公園鏈狀行程"><a href="#花蓮太平洋公園（原南濱公園）-北濱公園-北濱外環道-和平公園鏈狀行程" class="headerlink" title="花蓮太平洋公園（原南濱公園）+ 北濱公園 + 北濱外環道+和平公園鏈狀行程"></a>花蓮太平洋公園（原南濱公園）+ 北濱公園 + 北濱外環道+和平公園鏈狀行程</h4><ul>
<li>地址：<br>南濱公園大門口位在『台11線』『和平路』路口。<br>北濱公園汽車入口位在『北濱街』『海濱街』交接，直行5公尺，位在正右方（很容易錯過呦）。<br>和平公園在北濱公園往北過去一點，很明顯(找不到不要揍小編，要去配新眼鏡XD)。<br><img src="北濱外環道.png" alt="北濱外環道"></li>
<li>開放時間：24hr</li>
<li>門票：免費</li>
<li>參考文：<br>[太平洋公園] <a href="http://ppt.cc/IOSAM" target="_blank" rel="external">http://ppt.cc/IOSAM</a><br>[北濱公園] <a href="http://ppt.cc/rqWNN" target="_blank" rel="external">http://ppt.cc/rqWNN</a><br>[和平公園] <a href="http://ppt.cc/NJmBf" target="_blank" rel="external">http://ppt.cc/NJmBf</a><blockquote>
<p>小編推薦：太平洋公園是個適合拍照、看海的景點，可是小編找不到有關「觀音大佛涼亭」和另一側高台的旅遊文（愁眉），部落客怎麼會不知道上面可以眺望太平洋呢！！！<br>建議您可以沿著自行車步道，一路漫遊、愜意地與太平洋交換心情，向北行，可一路通往北濱公園。<br>這裡，小編提醒徒步的遊客，準備好跑半馬的精神，或者，轉而開車、騎車沿著海濱街一路向北（千萬不要回頭，因為濱海街是單向道XD由北向南行請改走隔壁的北濱街）<br><img src="南濱北濱大門.png" alt="南濱北濱大門"><br>晚上整條自行車道會打燈，當然這裡的光廊還稱不上五光十色，對於在外當遊子的小編來說，卻也有它單純的投射、簡單的浪漫。只是，提醒大家，這裡晚上人不多請注意安全。<br>接著，北濱公園相較之下，就比較小一點，除了幾個藝術裝置可以拍拍照之外，同樣能欣賞太平洋，不小心在廣場還會偶遇表演團體（很少）。<br>對小編來說，這裡最美的回憶是沙灘排球，所以不要問我是不是「好山好水好無聊」XD 有心，哪兒都是最美的風景呀，您說是吧～？<br>最後，和平公園是一個翻新後的小公園，新設了一個『和平鐘』，聽說敲敲鐘可以許願（搞得像是神社，不過要記得還願喔XD）。<br>偷偷說，小編曾在半夜兩點多，夜遊去!!敲鐘!!，當時我許一個世界和平（笑，暫時不用還願），因為自覺有點白目，還探了個頭，確定應該沒有人來投訴（拍謝）<br>其實住宅區離公園還有一段，大家可以安心敲鐘喔！</p>
</blockquote>
</li>
</ul>
<h4 id="吉安慶修院"><a href="#吉安慶修院" class="headerlink" title="吉安慶修院"></a>吉安慶修院</h4><ul>
<li>地址：973花蓮縣吉安鄉吉安村中興路345-1號</li>
<li>開放時間：08:30~17:00</li>
<li>門票：全票 30 半票 15</li>
<li>參考文：<a href="http://ppt.cc/ZwkQi" target="_blank" rel="external">http://ppt.cc/ZwkQi</a><blockquote>
<p>小篇推薦：這裡是個…拜拜的地方，其實以前有幾座「巨型橡棋桌」，現在已經撤掉，多了Q版神明，也多了一點銷售中心的味道，<br>但是小編就是喜歡這裡的日式建築和庭院深深深幾許的味道。小編提醒週末假日遊客甚多。<br><img src="慶修院象棋桌.png" alt="慶修院象棋桌"></p>
</blockquote>
</li>
</ul>
<h1 id="花蓮美食"><a href="#花蓮美食" class="headerlink" title="花蓮美食"></a>花蓮美食</h1><h4 id="東大門"><a href="#東大門" class="headerlink" title="東大門"></a>東大門</h4><ul>
<li>炸螃蟹 <a href="http://ppt.cc/5rNgz" target="_blank" rel="external">http://ppt.cc/5rNgz</a><blockquote>
<p>小編推薦：小編覺得當零食、配啤酒都不錯！</p>
</blockquote>
</li>
</ul>
<h4 id="蒲公英歐風甜點"><a href="#蒲公英歐風甜點" class="headerlink" title="蒲公英歐風甜點"></a>蒲公英歐風甜點</h4><ul>
<li>地址：花蓮市忠義二街12號</li>
<li>營業時間：13:00~19:00 (週三、四公休)</li>
<li>參考文：<a href="http://ppt.cc/GDJHr" target="_blank" rel="external">http://ppt.cc/GDJHr</a><blockquote>
<p>小編推薦：當年花蓮第一家正港洋果子「法式邊境」入駐，小編也是愛到一個不要不要的，沒有它的出現，小編可能會一直屈就於…喔！<br>小編是說其他『百艾』、『蒨魔法』、『花漾洋菓子』、『棉花甜』、『喜品家』、『弘宇蛋糕』…等等的蛋糕也是很好吃呢（滴口水），小編有機會再推薦他們，<br>這裡只是要表達後來一堆人，爭先恐後地到法式邊境一嚐「藍帶來著的洋果子」，就這麼反骨地，小編發現第二家藍帶回來的點心店，個人很喜歡這家的檸檬塔。<br>店內裝潢和店外的電話亭，都是老闆當年旅經英國愛上的景色。雖然價位偏高，但是不訪來坐坐吧！</p>
</blockquote>
</li>
</ul>
<h4 id="一碗小"><a href="#一碗小" class="headerlink" title="一碗小"></a>一碗小</h4><ul>
<li>地址：花蓮市明禮路14巷1號</li>
<li>營業時間：週一～週日 11:00~14:00 17:00~20:00 (週三公休)</li>
<li>參考文：<a href="http://ppt.cc/ceUvK" target="_blank" rel="external">http://ppt.cc/ceUvK</a><blockquote>
<p>小編推薦：一碗小點餐很簡單 湯頭（清燉/紅燒）、肉（羊/牛）、主食（麵線/冬粉/拉麵/泡饃）各選一。<br>泡饃是什麼勒？泡饃是一種北方麵食，長得像是圓燒餅，口感厚實（偏硬），泡進湯裡後餅香吸附著湯頭的甜，別有一番風味。<br>小編清敦紅燒牛羊冬粉泡饃都吃過，因為小編口味偏淡，所以還是偏好清燉，羊肉不騷、牛肉不柴，肉鮮都滾進了湯頭裡，非常值得一吃！</p>
</blockquote>
</li>
</ul>
<h4 id="源寶屋咖哩麵包"><a href="#源寶屋咖哩麵包" class="headerlink" title="源寶屋咖哩麵包"></a>源寶屋咖哩麵包</h4><ul>
<li>地址：花蓮縣花蓮市仁愛街77號</li>
<li>營業時間：11:30~賣完為止</li>
<li>參考文： <a href="http://ppt.cc/UL3rT" target="_blank" rel="external">http://ppt.cc/UL3rT</a><blockquote>
<p>小編推薦：小編一直覺得咖哩麵包好像沒什麼特別的，奇怪了，好多朋友說『超好吃』！<br>小編半信半疑也走近了店舖，一瞧，看到是炸的！小編當場掉頭走人，我的媽呀，又是咖哩麵包又是炸的，小編完全無感呀。<br>後來，隔壁老王說：就吃一口，不喜歡也不會食物中毒，所以我咬了一口，竟然完全不油膩、咖哩還鹹甜地很有默契耶！不多說，有經過記得去吃一個！</p>
</blockquote>
</li>
</ul>
<h1 id="小編景點"><a href="#小編景點" class="headerlink" title="小編景點"></a>小編景點</h1><h4 id="翡翠谷"><a href="#翡翠谷" class="headerlink" title="翡翠谷"></a>翡翠谷</h4><ul>
<li>地址：翡翠谷（小編不是故意不告訴你 &gt; &lt; Google會告訴您走台9丙省道，在仁壽橋前轉入銅門村，從銅門橋北端附近沿木瓜溪旁山路步行而入即可到達翡翠谷『門牌』，請依牌子前進）</li>
<li>參考文：<a href="http://ppt.cc/xhl1V" target="_blank" rel="external">http://ppt.cc/xhl1V</a><blockquote>
<p>小編推薦：要進翡翠谷之前，記得配載『手電筒』，這很重要！因為您將穿越（大中午）伸手不見五指的蝙蝠洞，手機手電筒也僅能讓你看見前方一公尺範圍的路，是一個很難得的體驗，出洞口的剎那猶如走進桃花源之感。<br>接著，你可能需要帶上小編…的電話，依指示往上往下爬爬爬（小編實在是不知道該如何描述，容我跳過），抵達這一處翡翠谷並不是一個壯麗的瀑布，卻有著小而美的流水，傾瀉而下，再匯聚成小溪流，炎熱的夏天很適合戲水（ㄒ一ˇ ㄐ一ㄠ ˇ），是一個安全的小瀑布。<br>但是，目前仍然沒有相關單位開拓道路，行徑路間有一段陡坡與鬆動的流石，不建議帶小朋友前往。</p>
</blockquote>
</li>
</ul>
<h4 id="雲山水-實地走訪優養化的湖泊"><a href="#雲山水-實地走訪優養化的湖泊" class="headerlink" title="雲山水 - 實地走訪優養化的湖泊"></a>雲山水 - 實地走訪優養化的湖泊</h4><ul>
<li>地址：花蓮縣壽豐鄉豐坪路二段2巷201弄12號</li>
<li>門票：免費</li>
<li>開放時間：24 hr</li>
<li>參考文：<a href="http://ppt.cc/FfQy9" target="_blank" rel="external">http://ppt.cc/FfQy9</a><blockquote>
<p>小編推薦：小編第一次走訪雲山水就深深被那一片數林與湖泊相映所吸引，當時周邊的民宿都還在挖地基。<br>兩三年後，民宿林立各具特色，幾處彩繪牆和可愛的木牌也增添攝影樂趣，這裡是小編覺得怎麼拍都詩情畫意的絕佳景點。<br>小編提醒，整個園區走一圈大概需要半小時。另外，以前雲山水入夜後無光，小編曾經夜探雲山水，驚見滿天星空，但是現在就不得而知了。</p>
</blockquote>
</li>
</ul>
<h4 id="牛山呼庭"><a href="#牛山呼庭" class="headerlink" title="牛山呼庭"></a>牛山呼庭</h4><ul>
<li>地址：花蓮縣壽豐鄉水璉村牛山39-5號（台11線約26.6公里）</li>
<li>門票：50 元/人，可以抵消費 50 元</li>
<li>開放時間：10:00~19:00</li>
<li>參考文：<a href="http://ppt.cc/mvdBo" target="_blank" rel="external">http://ppt.cc/mvdBo</a><blockquote>
<p>小編推薦：牛山呼庭一直都是私有地，所以收取門票還算合理。牛山呼庭後有一大片草地、木雕藝術作品和小木屋，前有一望無際之大海，也開放了海灘。<br>東部越來越多海灘和溪流被限制下水，而牛山呼庭仍保留了一大片海灘，實在難得，小編非常推薦晚霞時分坐一回，聆聽海浪拍打、落幕與海相輝映，<br>也可以往（面對）沙灘右方的岩洞中走（那兒浪比較平），是電影『沈默』的拍攝場景（影帝李奧納多曾造訪喔！），在岩邊攝影亦是好風光，<br>或是爬上草地最高處，依著『幸福鐘』眺望海洋也是一場浪漫。</p>
</blockquote>
</li>
</ul>
<h4 id="海中天-颱風天觀浪好去處"><a href="#海中天-颱風天觀浪好去處" class="headerlink" title="海中天 - 颱風天觀浪好去處"></a>海中天 - 颱風天觀浪好去處</h4><ul>
<li>地址：詳見七七高地</li>
<li>門票：免費，餐飲另外點餐付費</li>
<li>開放時間： 24hr</li>
<li>參考文：<a href="http://ppt.cc/nQgaV" target="_blank" rel="external">http://ppt.cc/nQgaV</a><blockquote>
<p>小編推薦：小編先承認在花蓮的日子幾度颱風天觀浪，特此聲明這是危險的行為『盡量』不要去做XD 其中一個景點就是「海中天」，這裡是民宿，但是有對外開放，不過如果您不是房客，您的車輛勁量不要開近民宿內的停車區（發揮愛心）。<br>小編推薦的契機只是一次觀浪，小編有一群傻子朋友聽見當天 14:00 陸上警報即將發佈，竟然說要去海中天觀浪，當時風大到每個人臉頰都啪嗒啪嗒響，浪就更不用說那是衝天地拍打，半山腰都已在海中，小編被那時的驚濤駭浪深深印了一個像。<br>其實呢～一般時日這兒的浪沒這麼雀躍啦，躺在觀景台的躺椅上看看浪花也是不錯、旁邊還有民宿老闆養的小動物（雞、鳥…等），有些關著、有些在外跑跑跳跳追著小朋友，可愛極了！<br>順帶一提，小編有張過這兒餐廳的價目表，想吃東西是有的，價位就是觀光價。</p>
</blockquote>
</li>
</ul>
<h4 id="七七高地"><a href="#七七高地" class="headerlink" title="七七高地"></a>七七高地</h4><ul>
<li>地址：過花蓮大橋（小編自作主張稱它是遠雄大橋）行經台11丙公路往台東方向，看見海中天扛棒，有兩條岔路，右邊往海中天，左邊就是往七七高地。<br><img src="七七高地地理位置.png" alt="七七高地地理位置"><br><img src="七七高地海中天入口.png" alt="七七高地海中天入口"></li>
<li>門票：免費</li>
<li>開放時間：24hr（但是晚上沒有燈喔！）</li>
<li>參考文：<a href="http://ppt.cc/Up3Bb" target="_blank" rel="external">http://ppt.cc/Up3Bb</a><blockquote>
<p>小編推薦：小編又要提到一群傻子朋友，腦子裡沒一個計畫的，盡是精血衝腦地說走就走、說轉就轉，還特別喜歡找一些『這時間去那幹嘛』的地方，沒錯，晚上八點說晚不晚，可是七七高地上沒燈啊！<br>一群傻子（包括小篇本人，遮臉）搬上烤肉架，衝去生鮮超市買些菜啊肉的，就上去烤肉看星星，那時我以為七七高地只是個看星星的好去處。<br>其實，白天可以看太平洋耶！而且遠眺花蓮大橋到七星潭一覽無遺，雖然同樣是看海，七星潭是近距離的體驗、南濱北濱那是退了幾步感受海浪的奔騰、上了山的七七高地看的是海的寧靜與遼闊，不同的高度，那感覺還是很不一樣的。<br>當然，花蓮看海的地方這裡還繁不及備載！下次走訪遠雄何不順道登山一趟吧！小編補充，有部落客不建議開車上去，但是到達丘頂其實路程不近（約），騎車上去只需要注意草滑，而開車上去會有刮底盤的必要，所以步行、騎車或開車自行斟酌囉！</p>
</blockquote>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自從蘇花開通後，東部像是多了一道門，越來越多親朋好友你鄰居不遠千里來到東部踏踏青，離門口最近的宜蘭被開發地早，後來花蓮也相繼有蓬勃的發展。&lt;br&gt;小編當年看著一個學校簡介，被迷惑地不要不要的，就這麼來到了花蓮&lt;br&gt;
    
    </summary>
    
      <category term="生活雜記" scheme="http://blog.unisharp.com/categories/%E7%94%9F%E6%B4%BB%E9%9B%9C%E8%A8%98/"/>
    
    
      <category term="旅遊" scheme="http://blog.unisharp.com/tags/%E6%97%85%E9%81%8A/"/>
    
  </entry>
  
  <entry>
    <title>溝通-活用本質力</title>
    <link href="http://blog.unisharp.com/2017/01/06/%E6%BA%9D%E9%80%9A-%E6%B4%BB%E7%94%A8%E6%9C%AC%E8%B3%AA%E5%8A%9B/"/>
    <id>http://blog.unisharp.com/2017/01/06/溝通-活用本質力/</id>
    <published>2017-01-05T16:00:00.000Z</published>
    <updated>2017-04-25T08:05:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>人類最常進行的就是「溝通」，但很多時候都會出現「溝通不良」導致需求認知有落差。<br>我覺得，溝通的目的就是溝通，聆聽到對方在乎的部分與讓對方收到我想表達的內容，雙方認知能夠同步才是最重要的結果。<br><a id="more"></a></p>
<p>在與業主打交道很常遇見！</p>
<blockquote>
<p>『啊！這個操作模式我不習慣耶！』</p>
<p>『這個畫面怎麼跟我想的不一樣？』</p>
<p>『新增為什麼要開新視窗？我想在原來畫面進行就夠了！』</p>
</blockquote>
<p>業主會埋怨：這不是應該是設計師的 common sense 嘛？哪有人這樣設計的？</p>
<p>是，常常認知落差最後的一根稻草，正是所謂的 common sense。</p>
<p>到底要怎麼「溝通」？到達什麼標準才算是真正的有 sense？</p>
<p>到這邊！先跳脫一下，以生物學來看看甚麼是溝通</p>
<p>溝通來自於意識，意識來自於人腦對刺激的反應，當感官接受刺激時，這些刺激轉化為電或化學信號，通過神經纖維傳導到大腦，在大腦中沿著相連的神經網路通道進行傳導。直到對外界刺激形成有效反應時輸入終止。傳導的過程，即意識的過程。</p>
<p>每個人對外界刺激會因天生的構造與後天的記憶，最終產生不一樣的，回應！</p>
<p>在演化過程中，為了節省能量消耗，大腦會出現一種稱之神經走道（記憶走道），的快速處理方式，可稱之為思維偏好。</p>
<p>所以，能了解自己的思維偏好與溝通對象的思維偏好，更能快速與有效地完成目的。</p>
<p>全腦思維科學分析 (Emergenetics Science) 的核心概念。每個人其實都有與生俱來的「本質天賦」，只是許多人都不清楚，透過全腦思維分析獨創的本質個性測驗與解說，就能找出每個人潛藏的「本質天賦」。此外，當你學會如何了舉別人的性格特質後，也就知道該怎麼和他溝通，彼此的互動自然順暢無礙。（如果有興趣，可以找〈活用你的本質力〉這本書對於全腦思維科學分析有更深入的介紹）。</p>
<p>在全腦思維科學分析中，會將思考偏好分成四大類概念型，社交型，分析型，結構型。</p>
<ul>
<li>概念型<ul>
<li>重視創造性</li>
<li>想像力豐富</li>
<li>喜歡挑戰新事物</li>
</ul>
</li>
<li>社交型<ul>
<li>重視他人的評價</li>
<li>重視與他人的關係</li>
<li>依靠直覺評斷他人</li>
</ul>
</li>
<li>分析型<ul>
<li>理論性思考</li>
<li>重視目的，原因</li>
<li>理性</li>
</ul>
</li>
<li>結構型<ul>
<li>重視可行性</li>
<li>務實</li>
<li>對新事物較謹慎</li>
</ul>
</li>
</ul>
<p>一般來說，每個人都有這四種偏好，只不過優先順序不一樣，<br>舉個例子來說向某人問: 我們週六出去玩好不好！<br>不同類型的人，考慮去不去的優先順序會不一樣</p>
<ul>
<li>概念型：玩什麼，好不好玩？</li>
<li>社交型：跟誰去，還有誰啊？</li>
<li>分析型：為什麼要去玩，為什麼找我啊？</li>
<li>結構型：我先想想週六有沒有空？我可以去嗎？</li>
</ul>
<p>每個人都有自己的本質，若不能了解每個人都有不同的特質於思考偏好，那麼就容易引起生活中的溝通不良。</p>
<p>比方說，概念型偏好約結構型的朋友要出去玩，結構型朋友的週六有事情不能去，概念型的朋友一直在跟他說那裡真得很好玩！<br>就會變成：</p>
<blockquote>
<p>「為什麼那個人聽不懂我說的話？」</p>
<p>「他怎能老是愛跟我唱反調？」</p>
</blockquote>
<p>這些都起因於我們忘了或是忽略每個人的不同，無法採取適合對方本質的溝通方法才會如此。</p>
<p>因此，唯有理解自己與對方各自擁有的特性，才有機會建立彼此良好的溝通模式。</p>
<p>也就是用雙方都感到舒服的方式讓溝通更順暢無礙。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人類最常進行的就是「溝通」，但很多時候都會出現「溝通不良」導致需求認知有落差。&lt;br&gt;我覺得，溝通的目的就是溝通，聆聽到對方在乎的部分與讓對方收到我想表達的內容，雙方認知能夠同步才是最重要的結果。&lt;br&gt;
    
    </summary>
    
      <category term="專案管理" scheme="http://blog.unisharp.com/categories/%E5%B0%88%E6%A1%88%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="溝通" scheme="http://blog.unisharp.com/tags/%E6%BA%9D%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>閱讀體驗不好的程式碼</title>
    <link href="http://blog.unisharp.com/2016/12/09/%E9%96%B1%E8%AE%80%E9%AB%94%E9%A9%97%E4%B8%8D%E5%A5%BD%E7%9A%84%E7%A8%8B%E5%BC%8F%E7%A2%BC/"/>
    <id>http://blog.unisharp.com/2016/12/09/閱讀體驗不好的程式碼/</id>
    <published>2016-12-08T16:00:00.000Z</published>
    <updated>2017-04-25T08:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>談到 UX 時，通常都是在討論介面直不直覺、漂亮與否、操作好不好上手等等。然而在開發專案時，還有一個很重要 UX，那就是程式碼的閱讀體驗。如果專案中重複的 code 一大堆<br><a id="more"></a><br>，又或者 function 命名模稜兩可，又看不到任何的註解，想必會讓日後接著維護的人（99% 都是幾個禮拜後的自己）難以下手，為了修改一個小小的功能卻花的很多不必要的時間。</p>
<h2 id="發生閱讀問題的情境"><a href="#發生閱讀問題的情境" class="headerlink" title="發生閱讀問題的情境"></a>發生閱讀問題的情境</h2><p>以下是可能發生在開發中的一些現象或是操作行為，逐項列出了造成閱讀體驗不好的原因：</p>
<h4 id="一直滾動滑鼠滾輪"><a href="#一直滾動滑鼠滾輪" class="headerlink" title="一直滾動滑鼠滾輪"></a>一直滾動滑鼠滾輪</h4><ul>
<li>原因：function 過長</li>
</ul>
<h4 id="一直全域搜尋"><a href="#一直全域搜尋" class="headerlink" title="一直全域搜尋"></a>一直全域搜尋</h4><ul>
<li>原因：function 過長</li>
</ul>
<h4 id="一直查看同一個-function-內的-code"><a href="#一直查看同一個-function-內的-code" class="headerlink" title="一直查看同一個 function 內的 code"></a>一直查看同一個 function 內的 code</h4><ul>
<li>原因： function 命名不當，無法表達其含義</li>
</ul>
<h4 id="不斷的向上追朔原始碼"><a href="#不斷的向上追朔原始碼" class="headerlink" title="不斷的向上追朔原始碼"></a>不斷的向上追朔原始碼</h4><ul>
<li>原因：呼叫的層數太多</li>
<li>例子：Laravel 原始碼</li>
</ul>
<h4 id="反覆查看全域常數的值"><a href="#反覆查看全域常數的值" class="headerlink" title="反覆查看全域常數的值"></a>反覆查看全域常數的值</h4><ul>
<li>原因：常數命名不當，無法表達其含義</li>
</ul>
<h4 id="幫程式碼畫流程圖"><a href="#幫程式碼畫流程圖" class="headerlink" title="幫程式碼畫流程圖"></a>幫程式碼畫流程圖</h4><ul>
<li>原因：巢狀太深</li>
<li>例子：Laravel File Manager 原始碼（v1.0 以前的版本）</li>
</ul>
<p>在開發的時候可以稍微留意自己的操作（甚至可以錄影起來），觀察看看有沒有與以上事項相符</p>
<h2 id="閱讀問題的五大分類"><a href="#閱讀問題的五大分類" class="headerlink" title="閱讀問題的五大分類"></a>閱讀問題的五大分類</h2><ol>
<li>命名類的問題<ul>
<li>沒有考慮呼叫時的情況</li>
</ul>
</li>
</ol>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">// 例子：從班級（Grade）中取得學生的數量</div><div class="line">grade.getStudentsCount() // get 有點多餘</div><div class="line">grade.countStudents()    // 名稱聽起來像個動作，不知道到底會回傳什麼</div><div class="line">grade.students.size()    // 書寫容易，但 students 須為 public</div><div class="line">grade.size()             // 到底是什麼的大小？教室大小嗎？</div><div class="line">grade.studentsCount()    // 最精簡且語意清晰</div></pre></td></tr></table></figure>
</code></pre><ul>
<li>使用英文以外的語言命名<ul>
<li>例子：與其用 shuliang（數量）來為變數命名，不如直接用英文的 count</li>
</ul>
</li>
<li>命名與行為不一致（做的事情多餘或少於預期）<ul>
<li>例子：function 名為 update()，卻呼叫了 showData() &amp; writeToFile()</li>
</ul>
</li>
<li>無意義的命名<ul>
<li>例子：變數或是 function 名稱取名叫 <code>a</code>, <code>b</code>, <code>c</code>, <code>temp</code>, <code>result</code>, <code>retVal</code> 等等，不知所云。但用於迴圈中的 index 值 <code>i</code>, <code>j</code> 等等可以除外<ol>
<li>註解類的問題</li>
<li>結構類的問題</li>
<li>架構類的問題</li>
<li>風格類的問題</li>
</ol>
</li>
</ul>
</li>
</ul>
<p>本篇節錄自《我的程式碼會說話》</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;談到 UX 時，通常都是在討論介面直不直覺、漂亮與否、操作好不好上手等等。然而在開發專案時，還有一個很重要 UX，那就是程式碼的閱讀體驗。如果專案中重複的 code 一大堆&lt;br&gt;
    
    </summary>
    
      <category term="後端技術" scheme="http://blog.unisharp.com/categories/%E5%BE%8C%E7%AB%AF%E6%8A%80%E8%A1%93/"/>
    
    
      <category term="程式設計" scheme="http://blog.unisharp.com/tags/%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88/"/>
    
  </entry>
  
  <entry>
    <title>PM在團隊中扮演協調與溝通的角色</title>
    <link href="http://blog.unisharp.com/2016/11/20/PM%E5%9C%A8%E5%9C%98%E9%9A%8A%E4%B8%AD%E6%89%AE%E6%BC%94%E5%8D%94%E8%AA%BF%E8%88%87%E6%BA%9D%E9%80%9A%E7%9A%84%E8%A7%92%E8%89%B2/"/>
    <id>http://blog.unisharp.com/2016/11/20/PM在團隊中扮演協調與溝通的角色/</id>
    <published>2016-11-19T16:00:00.000Z</published>
    <updated>2017-05-24T04:15:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>執行專案過程中容易遇到很多部門參與，太多人有意見，但是很少有結論出來，容易使專案進度停滯沒有共識。<br>怎麼改善溝通增進效率是PM存在很重要的功能與意義，而其中有效溝通是指<br><a id="more"></a><br>「在溝通過程中，清楚地傳達了你的意思，也達到了你的目的」。</p>
<h2 id="PM就像枕頭，緩衝來自不同方向的情緒後，冷靜、理性的讓專案繼續"><a href="#PM就像枕頭，緩衝來自不同方向的情緒後，冷靜、理性的讓專案繼續" class="headerlink" title="PM就像枕頭，緩衝來自不同方向的情緒後，冷靜、理性的讓專案繼續"></a>PM就像枕頭，緩衝來自不同方向的情緒後，冷靜、理性的讓專案繼續</h2><p>PM要像枕頭一樣，同時面對客戶以及不同部門專案成員時，作為一個緩衝的角色，吸收來自一方意見的衝擊，消化整理後再反彈到另一方，保持平穩的溝通方式。</p>
<p>PM要當客戶與執行團隊之間堅固的橋樑，PM不應單方面的告知，告知客戶執行專案的企劃怎麼想，行銷怎麼說，若是客戶不滿意，在這情況下，又原封不動地告知團隊「客戶不滿意」，反而讓雙方的情緒影響專案。</p>
<h2 id="隨時能夠轉換角色，同時具備同理心以及鞭策力"><a href="#隨時能夠轉換角色，同時具備同理心以及鞭策力" class="headerlink" title="隨時能夠轉換角色，同時具備同理心以及鞭策力"></a>隨時能夠轉換角色，同時具備同理心以及鞭策力</h2><p>PM 通常要能轉換角色，和客戶溝通時，要能站在客戶的立場，讓客戶知道我們是和他站在同一陣線；有時候也必須轉站公司的立場，清楚地堅守底線，以維護公司的權益；對公司內部也是如此，和跨部門成員溝通專案細節，要能站在執行面的立場，傾聽成員時而抱怨、時而置疑的聲音，假做朋友一場XD。<br>正因為PM身負「資源協調者」和「進度監督者」兩項重任，更要能夠讓每個團隊成員都了解專案進度、認同並心服地執行專案，不能有「將工作分配出去之後，都是其他人的事情」的想法，與成員和部門維持良好的互動，提供清楚的訊息，才能讓團隊效率越來越高。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;執行專案過程中容易遇到很多部門參與，太多人有意見，但是很少有結論出來，容易使專案進度停滯沒有共識。&lt;br&gt;怎麼改善溝通增進效率是PM存在很重要的功能與意義，而其中有效溝通是指&lt;br&gt;
    
    </summary>
    
      <category term="專案管理" scheme="http://blog.unisharp.com/categories/%E5%B0%88%E6%A1%88%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="溝通" scheme="http://blog.unisharp.com/tags/%E6%BA%9D%E9%80%9A/"/>
    
      <category term="團隊合作" scheme="http://blog.unisharp.com/tags/%E5%9C%98%E9%9A%8A%E5%90%88%E4%BD%9C/"/>
    
      <category term="說話技巧" scheme="http://blog.unisharp.com/tags/%E8%AA%AA%E8%A9%B1%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>UX 從新手開始-使用者體驗的 100堂必修課</title>
    <link href="http://blog.unisharp.com/2016/10/11/UX%E5%BE%9E%E6%96%B0%E6%89%8B%E9%96%8B%E5%A7%8B-%E4%BD%BF%E7%94%A8%E8%80%85%E9%AB%94%E9%A9%97%E7%9A%84100%E5%A0%82%E5%BF%85%E4%BF%AE%E8%AA%B2/"/>
    <id>http://blog.unisharp.com/2016/10/11/UX從新手開始-使用者體驗的100堂必修課/</id>
    <published>2016-10-10T16:00:00.000Z</published>
    <updated>2017-05-24T05:42:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>​    今天來為大家介紹的這本「UX 從新手開始，使用者體驗的 100堂必修課」，作者完整地將 UX 設計中較容易碰到的問題與設計方法介紹給讀者，所以本書並不會像 「UX 策略」那樣的專精詳述某種特定方法，而是概略地提及讓大家有基本概念。<br><a id="more"></a><br>既然是這樣，我就再更精簡的找出對我們 PM/工程師/設計師有幫助的一些重點介紹給大家。</p>
<p>​    一開始作者開門見山地叮嚀「UX 設計」是一種流程，裡面包含了五件事：心理學、可用性、設計、文案撰寫和分析。</p>
<p>​    「心理學」是最先考量的要素，探討使用者一開始的感覺、行為會如何養成習慣、點擊某個按鈕時會有什麼期待、對於生活的需求…等，這也算是流程裡最複雜的一部分，因為設計者必須忽略自己的心理感受、直覺，才不會設計出一個屬於自己而非使用者需要的產品，放下自己的心裡感受是一件相當困難的事。</p>
<p>​    「可用性」，用一句話簡單地講就是：盡可能地減少使用上的困難並讓用戶直覺地完成目標。這部分也必須放下設計者自身的見解，進而用數據回饋、用戶研究的方式找出用戶在使用過程中不順並干擾他達成目標的問題點進而一步步修改和解決。就像 PM QA 找到 bug 後開 issue 給工程師fix一樣。</p>
<p>​    「設計」並非一般我們印象中那種美感的設計，在 UX 領域中你是否「喜歡它」並不要緊，這邊設計關乎的是如何運作、並且是能夠證明的東西; 它不是風格或樣式的問題。這邊有點抽象，我來舉個例子: 同樣需要用到「可用性」裡提到的數據回饋、用戶研究，而設計師需要被問到的問題如：你的設計如何能將使用者的眼光引導到正確的地方？怎麼知道？。你可能用 A/B Testing、眼動儀來追蹤受測的的行為與注意力，進而驗證並媒合客戶需求與用戶行為。</p>
<p>​    UX 流程中「文案撰寫」也跟我們所認知的品牌文案非常不同，品牌文案大多支持公司的形象與價值，但 UX 文案盡可能直接且簡單地將操作體驗描述清楚，同樣是為了輔助用戶更快速容易地達成目標。</p>
<p>​    「分析」是大多數設計者的弱點，而區分 UX 設計與一般設計主要的因素就是分析。真正有價值的都是那些你如何用資料證明你的觀點是對的、或去了解使用行為的真相？還是是你去解讀他們的做法？你看的是絕對的數字，還是相對的改善？如何用此次的分析正確地解決問題進行改善？這部分非常不容易，但也是為什麼現在數據分析師會是最夯職位的原因，所有的價值都藏在使用者所提供的數據之中。</p>
<p>以上五個流程觀點是我們必須先體認了解的，看完後發現UX設計根本與我們的想像天差地遠啊… Orz</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​    今天來為大家介紹的這本「UX 從新手開始，使用者體驗的 100堂必修課」，作者完整地將 UX 設計中較容易碰到的問題與設計方法介紹給讀者，所以本書並不會像 「UX 策略」那樣的專精詳述某種特定方法，而是概略地提及讓大家有基本概念。&lt;br&gt;
    
    </summary>
    
      <category term="專案管理" scheme="http://blog.unisharp.com/categories/%E5%B0%88%E6%A1%88%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="UX" scheme="http://blog.unisharp.com/tags/UX/"/>
    
  </entry>
  
</feed>
